DROP DATABASE IF EXISTS c1;
CREATE DATABASE c1;
USE c1;

DROP TABLE UNI1;
CREATE TABLE UNI1(
SHIPMENT_ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
FLAVOR 	VARCHAR(50) NOT NULL ,
TOTAL_ORDER INT NOT NULL
);


CREATE TABLE UNI2(
SHIPMENT_ID INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
FLAVOR 	VARCHAR(50) NOT NULL ,
TOTAL_ORDER INT NOT NULL
);


INSERT INTO UNI1 VALUES(101,'chocolate',3200);
INSERT INTO UNI1 VALUES(102,'vanilla',2800);
INSERT INTO UNI1 VALUES(103,'mint_chocolate',1700);

INSERT INTO UNI2 VALUES(104,'caramel',2600);
INSERT INTO UNI2 VALUES(105,'white_chocolate',3100);
INSERT INTO UNI2 VALUES(106,'peach',2450);


SELECT *
FROM UNI1;

SELECT *
FROM UNI2;

#두개의 테이블을 합치고 UNI1테이블의 FLAVOR 값을 NULL 값으로 만들기
SELECT SHIPMENT_ID,NULL AS FLAVOR, TOTAL_ORDER #NOT NULL 이지만 NULL 값으로 보이게 할 수 있다.
FROM UNI1
UNION
SELECT *
FROM UNI2;


#UNION 과 UNION ALL 차이점 비교하기

INSERT INTO UNI1 VALUES(111,'orange',2900);
INSERT INTO UNI2 VALUES(111,'orange',2900);


SELECT *
FROM UNI1;

SELECT *
FROM UNI2;

#UNION은 중복값이 있다면 하나만 표시해준다.
SELECT *
FROM UNI1
UNION
SELECT* 
FROM UNI2;

#UNION ALL은 중복값도 표시해준다. 
SELECT *  
FROM UNI1
UNION ALL
SELECT *
FROM UNI2;

#컬럼 between A and B

SELECT *
FROM UNI1
WHERE TOTAL_ORDER BETWEEN 1000 AND 3000
