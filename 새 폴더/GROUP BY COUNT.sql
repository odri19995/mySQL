#재구매가 일어난 상품과 회원 리스트 구하기

DROP DATABASE IF EXISTS c1;
CREATE DATABASE c1;
USE c1;

DROP TABLE ONLINE_SALE
CREATE TABLE ONLINE_SALE(
ONLINE_SALE_ID	INT	NOT NULL,
USER_ID	INT	NOT NULL,
PRODUCT_ID	INT	NOT NULL,
SALES_AMOUNT INT NOT NULL,
SALES_DATE	DATE NOT NULL
);

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =1,
USER_ID =1,
PRODUCT_ID =3;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =2,
USER_ID =1,
PRODUCT_ID =4;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =4,
USER_ID =2,
PRODUCT_ID =4;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =3,
USER_ID =1,
PRODUCT_ID =3;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =5,
USER_ID =3,
PRODUCT_ID =5;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =6,
USER_ID =2,
PRODUCT_ID =4;

INSERT INTO ONLINE_SALE SET
ONLINE_SALE_ID =2,
USER_ID =1,
PRODUCT_ID =4;

SELECT USER_ID,COUNT(ONLINE_SALE_ID)
FROM ONLINE_SALE
GROUP BY USER_ID,PRODUCT_ID

SELECT *
FROM ONLINE_SALE


# 중복값 갯수와 각각의 값 구하기
SELECT USER_ID, PRODUCT_ID 
FROM ONLINE_SALE
GROUP BY USER_ID,PRODUCT_ID
HAVING COUNT(USER_ID) > 1
#HAVING COUNT(ONLINE_SALE_ID) > 1 #3은 USERID PRODUCT_ID 기준으로 봤을 때 카운트가 1개밖에 없다. 
ORDER BY USER_ID ASC, PRODUCT_ID DESC;

#최종 정리 

#GROUP BY : 겹치는 것 있으면 제일 위에 값만 하나 표시해줌  2가지 이상 값을 분리하면 다른기준에서 UNIQUE하다면 다시 분리된다.
#COUNT는 GROUP BY  기준으로 또 갈라진다. 
